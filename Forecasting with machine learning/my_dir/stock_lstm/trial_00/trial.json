{"trial_id": "00", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "neurons", "default": null, "conditions": [], "min_value": 50, "max_value": 500, "step": 50, "sampling": "linear"}}], "values": {"neurons": 150}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"C:\\Users\\17203\\anaconda3\\lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 273, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"C:\\Users\\17203\\anaconda3\\lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 238, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n  File \"C:\\Users\\17203\\anaconda3\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n  File \"C:\\Users\\17203\\anaconda3\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 233, in _build_and_fit_model\n    results = self.hypermodel.fit(hp, model, *args, **kwargs)\n  File \"C:\\Users\\17203\\anaconda3\\lib\\site-packages\\keras_tuner\\src\\engine\\hypermodel.py\", line 149, in fit\n    return model.fit(*args, **kwargs)\n  File \"C:\\Users\\17203\\anaconda3\\lib\\site-packages\\keras\\src\\utils\\traceback_utils.py\", line 70, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"C:\\Users\\17203\\anaconda3\\lib\\site-packages\\tensorflow\\python\\eager\\execute.py\", line 53, in quick_execute\n    tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Graph execution error:\n\nDetected at node 'while/TensorListPushBack_8' defined at (most recent call last):\n    File \"C:/Program Files/JetBrains/PyCharm Community Edition 2023.2.5/plugins/python-ce/helpers/pydev/pydevd.py\", line 2199, in <module>\n      main()\n    File \"C:/Program Files/JetBrains/PyCharm Community Edition 2023.2.5/plugins/python-ce/helpers/pydev/pydevd.py\", line 2181, in main\n      globals = debugger.run(setup['file'], None, None, is_module)\n    File \"C:/Program Files/JetBrains/PyCharm Community Edition 2023.2.5/plugins/python-ce/helpers/pydev/pydevd.py\", line 1493, in run\n      return self._exec(is_module, entry_point_fn, module_name, file, globals, locals)\n    File \"C:/Program Files/JetBrains/PyCharm Community Edition 2023.2.5/plugins/python-ce/helpers/pydev/pydevd.py\", line 1500, in _exec\n      pydev_imports.execfile(file, globals, locals)  # execute the script\n    File \"C:\\Program Files\\JetBrains\\PyCharm Community Edition 2023.2.5\\plugins\\python-ce\\helpers\\pydev\\_pydev_imps\\_pydev_execfile.py\", line 18, in execfile\n      exec(compile(contents+\"\\n\", file, 'exec'), glob, loc)\n    File \"C:\\Users\\17203\\OneDrive - Montana State University\\Documents\\486project\\opt.py\", line 73, in <module>\n      tuner.search(train_x, train_y, epochs=50, validation_data=(test_x, test_y))\n    File \"C:\\Users\\17203\\anaconda3\\lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 233, in search\n      self._try_run_and_update_trial(trial, *fit_args, **fit_kwargs)\n    File \"C:\\Users\\17203\\anaconda3\\lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 273, in _try_run_and_update_trial\n      self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n    File \"C:\\Users\\17203\\anaconda3\\lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 238, in _run_and_update_trial\n      results = self.run_trial(trial, *fit_args, **fit_kwargs)\n    File \"C:\\Users\\17203\\anaconda3\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 314, in run_trial\n      obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n    File \"C:\\Users\\17203\\anaconda3\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 233, in _build_and_fit_model\n      results = self.hypermodel.fit(hp, model, *args, **kwargs)\n    File \"C:\\Users\\17203\\anaconda3\\lib\\site-packages\\keras_tuner\\src\\engine\\hypermodel.py\", line 149, in fit\n      return model.fit(*args, **kwargs)\n    File \"C:\\Users\\17203\\anaconda3\\lib\\site-packages\\keras\\src\\utils\\traceback_utils.py\", line 65, in error_handler\n      return fn(*args, **kwargs)\n    File \"C:\\Users\\17203\\anaconda3\\lib\\site-packages\\keras\\src\\engine\\training.py\", line 1742, in fit\n      tmp_logs = self.train_function(iterator)\n    File \"C:\\Users\\17203\\anaconda3\\lib\\site-packages\\keras\\src\\engine\\training.py\", line 1338, in train_function\n      return step_function(self, iterator)\n    File \"C:\\Users\\17203\\anaconda3\\lib\\site-packages\\keras\\src\\engine\\training.py\", line 1322, in step_function\n      outputs = model.distribute_strategy.run(run_step, args=(data,))\n    File \"C:\\Users\\17203\\anaconda3\\lib\\site-packages\\keras\\src\\engine\\training.py\", line 1303, in run_step\n      outputs = model.train_step(data)\n    File \"C:\\Users\\17203\\anaconda3\\lib\\site-packages\\keras\\src\\engine\\training.py\", line 1084, in train_step\n      self.optimizer.minimize(loss, self.trainable_variables, tape=tape)\n    File \"C:\\Users\\17203\\anaconda3\\lib\\site-packages\\keras\\src\\optimizers\\optimizer.py\", line 543, in minimize\n      grads_and_vars = self.compute_gradients(loss, var_list, tape)\n    File \"C:\\Users\\17203\\anaconda3\\lib\\site-packages\\keras\\src\\optimizers\\optimizer.py\", line 276, in compute_gradients\n      grads = tape.gradient(loss, var_list)\n    File \"C:\\Users\\17203\\anaconda3\\lib\\site-packages\\tensorflow\\core\\function\\capture\\capture_container.py\", line 150, in capture_by_value\n      return graph._capture_helper(tensor, name)  # pylint: disable=protected-access\nNode: 'while/TensorListPushBack_8'\nTried to append a tensor with incompatible shape to a list. Op element shape: [32,150] list shape: [1,150]\n\t [[{{node while/TensorListPushBack_8}}]]\n\t [[sequential/lstm/PartitionedCall]] [Op:__inference_train_function_3692]\n"}